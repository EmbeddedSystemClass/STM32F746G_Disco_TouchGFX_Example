/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen1_screen/Screen1ViewBase.hpp>
#include "BitmapDatabase.hpp"
#include <touchgfx/Color.hpp>

Screen1ViewBase::Screen1ViewBase() :
    buttonCallback(this, &Screen1ViewBase::buttonCallbackHandler),
    radioButtonSelectedCallback(this, &Screen1ViewBase::radioButtonSelectedCallbackHandler),
    radioButtonDeselectedCallback(this, &Screen1ViewBase::radioButtonDeselectedCallbackHandler)
{
    CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);

    image1.setXY(0, 0);
    image1.setBitmap(Bitmap(BITMAP_DARK_BACKGROUNDS_MAIN_BG_TEXTURE_480X272PX_ID));

    button1.setXY(412, 18);
    button1.setBitmaps(Bitmap(BITMAP_BLUE_ICONS_GO_NEXT_48_ID), Bitmap(BITMAP_BLUE_ICONS_GO_NEXT_48_ID));
    button1.setAction(buttonCallback);

    toggleButton1.setXY(107, 18);
    toggleButton1.setBitmaps(Bitmap(BITMAP_BLUE_TOGGLEBARS_TOGGLE_ROUND_LARGE_BUTTON_OFF_ID), Bitmap(BITMAP_BLUE_TOGGLEBARS_TOGGLE_ROUND_LARGE_BUTTON_ON_ID));

    circleProgress1.setXY(347, 84);
    circleProgress1.setProgressIndicatorPosition(0, 0, 104, 104);
    circleProgress1.setRange(0, 100);
    circleProgress1.setCenter(52, 52);
    circleProgress1.setRadius(42);
    circleProgress1.setLineWidth(16);
    circleProgress1.setStartEndAngle(0, 360);
    circleProgress1.setCapPrecision(90);
    circleProgress1.setBackground(Bitmap(BITMAP_BLUE_PROGRESSINDICATORS_BG_MEDIUM_CIRCLE_INDICATOR_BG_LINE_FULL_ID));
    circleProgress1Painter.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 255));
    circleProgress1.setPainter(circleProgress1Painter);
    circleProgress1.setValue(30);

    slider1.setXY(18, 47);
    slider1.setBitmaps(Bitmap(BITMAP_BLUE_SLIDER_VERTICAL_SMALL_SLIDER3_VERTICAL_ROUND_BACK_ID), Bitmap(BITMAP_BLUE_SLIDER_VERTICAL_SMALL_SLIDER3_VERTICAL_ROUND_FILL_ID), Bitmap(BITMAP_BLUE_SLIDER_VERTICAL_SMALL_INDICATORS_SLIDER3_VERTICAL_ROUND_NOB_ID));
    slider1.setupVerticalSlider(7, 3, 0, 0, 125);
    slider1.setValueRange(0, 100);
    slider1.setValue(0);

    circleProgress2.setXY(101, 84);
    circleProgress2.setProgressIndicatorPosition(0, 0, 104, 104);
    circleProgress2.setRange(0, 100);
    circleProgress2.setCenter(52, 52);
    circleProgress2.setRadius(42);
    circleProgress2.setLineWidth(16);
    circleProgress2.setStartEndAngle(0, 360);
    circleProgress2.setCapPrecision(180);
    circleProgress2.setBackground(Bitmap(BITMAP_BLUE_PROGRESSINDICATORS_BG_MEDIUM_CIRCLE_INDICATOR_BG_LINE_FULL_ID));
    circleProgress2Painter.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 0, 3));
    circleProgress2.setPainter(circleProgress2Painter);
    circleProgress2.setValue(60);

    circleProgress3.setXY(225, 84);
    circleProgress3.setProgressIndicatorPosition(0, 0, 104, 104);
    circleProgress3.setRange(0, 100);
    circleProgress3.setCenter(52, 52);
    circleProgress3.setRadius(42);
    circleProgress3.setLineWidth(16);
    circleProgress3.setStartEndAngle(0, 360);
    circleProgress3.setCapPrecision(10);
    circleProgress3.setBackground(Bitmap(BITMAP_BLUE_PROGRESSINDICATORS_BG_MEDIUM_CIRCLE_INDICATOR_BG_LINE_FULL_ID));
    circleProgress3Painter.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 255, 0));
    circleProgress3.setPainter(circleProgress3Painter);
    circleProgress3.setValue(50);

    slider2.setXY(93, 208);
    slider2.setBitmaps(Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_MEDIUM_SLIDER_ROUND_EDGE_FILL_ID), Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_MEDIUM_SLIDER_SQUARE_FILL_ID), Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_MEDIUM_INDICATORS_SLIDER_SQUARE_NOB_ID));
    slider2.setupHorizontalSlider(2, 19, 2, 0, 310);
    slider2.setValueRange(0, 100);
    slider2.setValue(0);

    radioButton1.setXY(319, 18);
    radioButton1.setBitmaps(Bitmap(BITMAP_BLUE_CHECK_BUTTONS_CHECK_ROUND_MARK_INACTIVE_ID), Bitmap(BITMAP_BLUE_CHECK_BUTTONS_CHECK_ROUND_MARK_NORMAL_ID), Bitmap(BITMAP_BLUE_CHECK_BUTTONS_CHECK_ROUND_MARK_PRESSED_ID), Bitmap(BITMAP_BLUE_CHECK_BUTTONS_CHECK_ROUND_MARK_ACTIVE_ID));
    radioButton1.setSelected(true);
    radioButton1.setDeselectionEnabled(true);

    add(image1);
    add(button1);
    add(toggleButton1);
    add(circleProgress1);
    add(slider1);
    add(circleProgress2);
    add(circleProgress3);
    add(slider2);
    add(radioButton1);
    radioButtonGroup.add(radioButton1);
    radioButtonGroup.setRadioButtonSelectedHandler(radioButtonSelectedCallback);
    radioButtonGroup.setRadioButtonDeselectedHandler(radioButtonDeselectedCallback);
}

void Screen1ViewBase::setupScreen()
{

}

void Screen1ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &button1)
    {
        //Interaction1
        //When button1 clicked change screen to Screen2
        //Go to Screen2 with screen transition towards East
        application().gotoScreen2ScreenSlideTransitionEast();
    }
    else if (&src == &toggleButton1)
    {

    }
}

void Screen1ViewBase::radioButtonSelectedCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &radioButton1)
    {
        //Interaction2
        //When radioButton1 selected show circleProgress2
        //Show circleProgress2
        circleProgress2.setVisible(true);
        circleProgress2.invalidate();
    }
}

void Screen1ViewBase::radioButtonDeselectedCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &radioButton1)
    {
        //Interaction3
        //When radioButton1 deselected hide circleProgress2
        //Hide circleProgress2
        circleProgress2.setVisible(false);
        circleProgress2.invalidate();
    }
}
